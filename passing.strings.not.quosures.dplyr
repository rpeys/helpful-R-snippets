outcomes.list <- list("mortality_2yr") #used in defining genes, samples and plotting heatmaps; should be colname of design and one of the values of DEGenes_dt$outcome

#filter examples
DEGenes <- (DEGenes_dt %>% filter(outcome %in% outcomes.list))$GENE_ID
samples_to_plot <- (design %>% filter(!is.na(!!! rlang::syms(outcomes.list))) %>% arrange(!!! rlang::syms(outcomes.list), `ISS score`))$sampleID #****** change based on outcome of interest
samples_to_plot <- (design %>% filter(!is.na(!!! rlang::syms(outcomes.list)), `ISS score` %in% c(3, 1)) %>% arrange(!!! rlang::syms(outcomes.list)))$sampleID #****** change based on outcome of interest
samples_to_plot <- (design %>% filter(!is.na(!!! rlang::syms(outcomes.list)), public_id %in% toupper(testing.pts)) %>% arrange(!!! rlang::syms(outcomes.list)))$sampleID #****** change based on outcome of interest

#ggplot2
pdf(file = "2yrmortality_top.feature.densities.pdf", onefile = TRUE)
for(feature in top_features){
  #print(ggplot(full_df %>% dplyr::filter(!is.na(`2yr_mortality`))) + geom_bar(aes_string(x=feature, fill = "`2yr_mortality`", color = "`2yr_mortality`"), alpha = 0.5) + facet_grid(`2yr_mortality` ~ .) + ggtitle(paste("Distribution of", feature, "in survivors & non-survivors")))
  print(ggplot(full_df %>% dplyr::filter(!is.na(`2yr_mortality`))) + geom_density(aes_string( x = feature, fill = "`2yr_mortality`", color = "`2yr_mortality`"), alpha = 0.5) + facet_grid(. ~`2yr_mortality`))
  
}
dev.off()
